#
	This module defines standart operations on linear sequences
	
	Linear sequence is a contiguos sequence of elements. It is represented by a structure containing two pointers to the beggining and to the end of the sequence.
#
import arpha.intrinsic

def length (self LinearSequence(_)) natural

def element(self LinearSequence(T: _),i natural) T
def element(self LinearSequence(T: _),i natural,item T)

#
TODO:
def slice(self LinearSequence(T: _),from natural)            LinearSequence(T)
def slice(self LinearSequence(T: _),to   natural)            LinearSequence(T)
def slice(self LinearSequence(T: _),from natural,to natural) LinearSequence(T)
#

def isEmpty(self LinearSequence(_)) bool
#def getElementAndAdvance(self LinearSequence(T: _)) T

