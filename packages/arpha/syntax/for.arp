#
	This module implements the for statement
	TODO for over tuples
#

macro foreach(collection Range,i,body)
{
	var rangeVariable = ast.newVariable()
	var range = ast.newVariableReference(rangeVariable)
	
	return [>
		$rangeVariable = $collection
		until(($range).empty){
			$i = &($range).current
			$body
			($range).moveNext()
		}
	<]
}

macro foreach(collection,i,body) = [> arpha.compiler.error("Invalid for loop - can't iterate over collection of type $(typeof($collection))!") <]

macro for 
{
	parser.expect("(")
	var name = parser.symbol()
	parser.expect("in")
	var collection = parser.parse()
	parser.expect(")")
	var body = ast.newExpressionReference(parser.parse(ignoreNewlines: true))
	
	var i = ast.newExpressionReference(ast.newVariable(name,mutable: false))
	return [> foreach($collection,$i,$body) <]
}
