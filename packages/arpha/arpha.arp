#
	This module defines arpha's syntax.
	Author: Hyp
	Version: 1
#

import export types

import export qualified compiler

import export syntax.conditional
import export syntax.logical
import export syntax.loops
import export syntax.comparison
import export syntax.arithmetic
import export syntax.increments
import export syntax.misc
import export syntax.for

# This is used to iterate over indices in an array or a sequence.
type Iota extends Range
{
	var begin,end natural
	
	def empty   (self) = self.begin >= self.end
	def current (self) = self.begin
	def moveNext(self) = self.begin++
}
def indices(self LinearSequence) = Iota(0 as natural,self.length) #TODO: remove as natural

import export core

import export functionality.operations.integer
import export functionality.operations.floating_point
import export functionality.operations.character
import export functionality.operations.boolean
import export functionality.operations.linear_sequence






import export functionality.misc
import export vector.core



