#
	This module defines arpha's syntax.
	Author: Hyp
	Version: 1
#

import export types

def false bool = 0
def true bool = 1

#
# An unsigned integer representing CPU's word.
# It is equivalent to size_t from C/C++.
def natural = if(true) uint32 else uint64

# Literal constant strings
def stringLiteral = String #HACK type "String" is temporary for now
#

import export operators

import export qualified compiler

import export operations

import export qualified ast

#

# Returns true if two given types are the same type. TOCONSIDER move to compiler
def equals(x compiler.Type,y compiler.Type) bool

# Returns the type of a given expression.
def typeof(expression compiler.Expression) compiler.Type

# Returns the size(in bytes) of a given type. If an expression was given instead, returns the size of that expression's type.
def sizeof(expression compiler.Expression) natural


# Real assert #TODO(Lates) implementation
def assert(file stringLiteral,line natural,expression stringLiteral)
# Wrapper, currently implemented by compiler
def assert(expression compiler.Expression)
#
