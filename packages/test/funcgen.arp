# temporary module used to test how functions are constructed using determined generic arguments
def f(x) = x
f(6) # ok
f(true) # ok

def inc(x) = x + 1
inc(7) # ok
inc(true) # error, body will never be resolved

#expanded arguments

def foo0(x) = 5
foo0(int32)

def foo(T){
	var x T
	return x
}
foo(int32) # ok
foo(bool) # ok

def foo2(T,x int32) T {
	var z T = x
	return z
}
foo2(int32,2) # ok

def foo3(T = bool){
	var x T
	return x
}
foo3() # ok
foo3(int32) # ok

def foo4(T = bool){
	def f(x T) T = 1 # NB function duplication
	f(0)
}
foo4(int32) # ok


#
This doesnt't work.. should it work?
	def bar(T,value T){
		var x T = 0
		return x + value
	}
	bar(int32,2) # ok
	bar(int8,6) # ok
#
