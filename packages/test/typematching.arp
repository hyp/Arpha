
var x = 1 #ok
var y _ = 2 # ok
var z Pointer(_) = 1 # error
var w Pointer(_) = &x #ok

match (int32)  { | int32 => true | _ => false } #true
match (*int32) { | Pointer(_) => true | _ => false } # true
match (*int32) { | Pointer(_) => true | Pointer(int32) => false | _ => false } # true
match (*int32) { | Pointer(T:_) => T } # int32

match (Function(int32,int32))   { | Function(T:_,T) => true | _ => false } # true
match (Function(int32,Nothing)) { | Function(T:_,T) => true | _ => false } # false

constraint C(T) = T == int32 or T == bool
match(int32) { | C => true | _ => false } #true
match(bool)  { | C => true | _ => false } #true
match(int16) { | C => true | _ => false } #false

constraint C2(T) = true
match(*int32) { | C2(_) => true | _ => false } # true
match(*bool)  { | C2(T:_) => T  | _ => false } # bool

{
	#Must handle the shadowing of outer variables correctly!
	var T = 1
	match(Function(int32,int32)) { | Function(T:_,T) => true | _ => false }
	#TODO T injection
}

def foo0(x) = 1
def foo1(x _) = 2
foo0(1) # ok
foo1(2) #ok

def foo2(x T:_,y T) = 1
foo2(1,2) # ok
foo2(1,false) # error

def foo3(x T:_) {
	var z T
}
foo3(1) # ok

#generated types and type matching

type Pair(T) { var first,second T }
match(Pair(int32)) { | Pair(T:_) => T } # int32

